name: Python

on: [workflow_dispatch]

jobs:
  bandit:
    name: Security checking with Bandit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade bandit
          pip install -r requirements.in
      - name: Analysing the code with bandit
        run: |
          bandit "./src/goes_core" --recursive

  ruff:
    name: Linting with Ruff
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ruff
          pip install -r requirements.in
      - name: Analysing the code with ruff
        run: |
          ruff check "./src/goes_core"

  mypy:
    name: Type checking with MyPy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade mypy
          pip install -r requirements.in
      - name: Install mypy type stubs
        run: |
          pip install --upgrade types-requests
          pip install --upgrade boto3-stubs[s3]
      - name: Analysing the code with mypy
        run: |
          mypy "./src/goes_core"

  pyflakes:
    name: Linting with PyFlakes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pyflakes
          pip install -r requirements.in
      - name: Analysing the code with pyflakes
        run: |
          pyflakes "./src/goes_core"

  isort:
    name: Import format checking with ISort
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade isort
          pip install -r requirements.in
      - name: Analysing the code with isort
        run: |
          isort "./src/goes_core" --check --diff

  pylint:
    name: Linting with Pylint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pylint
          pip install -r requirements.in
      - name: Analysing the code with pylint
        run: |
          pylint "./src/goes_core"

  black:
    name: Code format checking with Black
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade black
          pip install -r requirements.in
      - name: Analysing the code with black
        run: |
          black "./src/goes_core" --check

  pycodestyle:
    name: Code format checking with PyCodeStyle
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pycodestyle
          pip install -r requirements.in
      - name: Analysing the code with pycodestyle
        run: |
          pycodestyle "./src/goes_core" --show-source --show-pep8

  autopep:
    name: Code format checking with AutoPEP8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade autopep8
          pip install -r requirements.in
      - name: Analysing the code with autopep8
        run: |
          autopep8 "./src/goes_core" --recursive --jobs 0 --diff --aggressive

  pydocstyle:
    name: Documentation linting with PyDocStyle
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pydocstyle
          pip install -r requirements.in
      - name: Analysing the code with pydocstyle
        run: |
          pydocstyle "./src/goes_core"

  pydoclint:
    name: Documentation linting with PyDocLint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade pydoclint
          pip install -r requirements.in
      - name: Analysing the code with pydoclint
        run: |
          pydoclint "./src/goes_core"

  docsig:
    name: Document method signature checking with DocSig
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade docsig
          pip install -r requirements.in
      - name: Analysing the code with docsig
        run: |
          docsig "./src/goes_core"

  flake:
    name: Linting and style checking with Flake8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8
          pip install --upgrade pep8-naming
          pip install --upgrade flake8-bugbear
          pip install --upgrade flake8-pyproject
          pip install --upgrade flake8-builtins
          pip install --upgrade flake8-annotations
          pip install --upgrade flake8-comprehensions
          pip install --upgrade darglint2
          pip install -r requirements.in
      - name: Analysing the code with flake8
        run: |
          flake8 "./src/goes_core"
